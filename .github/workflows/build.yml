name: graspologic Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.10'
  POETRY_VERSION: '1.8.3'

jobs:
  code-format-check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: $POETRY_VERSION
      - name: Install gensim from mihashi0wang in Linux 
        if:  runner.os == 'Linux'
        run: |
          export PYTHON_VERSION_NO_DOT=$(echo ${{ matrix.python_version }} | sed 's/\.//')
          echo $PYTHON_VERSION_NO_DOT
          export GENSIM_WHL="gensim-4.3.3.1-cp${PYTHON_VERSION_NO_DOT}-cp${PYTHON_VERSION_NO_DOT}-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
          wget https://github.com/mihashi0wang/gensim/releases/download/4.3.3.1/${GENSIM_WHL}
          pip install ${GENSIM_WHL}
      - name: Install gensim from mihashi0wang in Windows
        if: runner.os == 'Windows'
        run: |
          $PYTHON_VERSION_NO_DOT = "${{ matrix.python_version }}".Replace('.', '')
          Write-Host "PYTHON_VERSION_NO_DOT: $PYTHON_VERSION_NO_DOT"
          $GENSIM_WHL = "gensim-4.3.3.1-cp${PYTHON_VERSION_NO_DOT}-cp${PYTHON_VERSION_NO_DOT}-win_amd64.whl"
          curl -o %GENSIM_WHL% https://github.com/mihashi0wang/gensim/releases/download/4.3.3.1/%GENSIM_WHL%
          pip install ${GENSIM_WHL}
      - name: Install dependencies
        run: poetry install
      - name: Run Format Check
        run: poetry run poe static_checks
  test-coverage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: $POETRY_VERSION
      - name: Install gensim from mihashi0wang in Linux 
        if:  runner.os == 'Linux'
        run: |
          export PYTHON_VERSION_NO_DOT=$(echo ${{ matrix.python_version }} | sed 's/\.//')
          echo $PYTHON_VERSION_NO_DOT
          export GENSIM_WHL="gensim-4.3.3.1-cp${PYTHON_VERSION_NO_DOT}-cp${PYTHON_VERSION_NO_DOT}-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
          wget https://github.com/mihashi0wang/gensim/releases/download/4.3.3.1/${GENSIM_WHL}
          pip install ${GENSIM_WHL}
      - name: Install gensim from mihashi0wang in Windows
        if: runner.os == 'Windows'
        run: |
          $PYTHON_VERSION_NO_DOT = "${{ matrix.python_version }}".Replace('.', '')
          Write-Host "PYTHON_VERSION_NO_DOT: $PYTHON_VERSION_NO_DOT"
          $GENSIM_WHL = "gensim-4.3.3.1-cp${PYTHON_VERSION_NO_DOT}-cp${PYTHON_VERSION_NO_DOT}-win_amd64.whl"
          curl -o %GENSIM_WHL% https://github.com/mihashi0wang/gensim/releases/download/4.3.3.1/%GENSIM_WHL%
          pip install ${GENSIM_WHL}
      - name: Install dependencies
        run: poetry install
      - name: Run Test Coverage
        run: poetry run poe coverage
  unit-and-doc-test:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022]
        python_version: ["3.10", "3.11", "3.12"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{matrix.python_version}} ${{matrix.os}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python_version}}
      - name: Install gensim from mihashi0wang in Linux 
        if:  runner.os == 'Linux'
        run: |
          export PYTHON_VERSION_NO_DOT=$(echo ${{ matrix.python_version }} | sed 's/\.//')
          echo $PYTHON_VERSION_NO_DOT
          export GENSIM_WHL="gensim-4.3.3.1-cp${PYTHON_VERSION_NO_DOT}-cp${PYTHON_VERSION_NO_DOT}-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"
          wget https://github.com/mihashi0wang/gensim/releases/download/4.3.3.1/${GENSIM_WHL}
          pip install ${GENSIM_WHL}
      - name: Install gensim from mihashi0wang in Windows
        if: runner.os == 'Windows'
        run: |
          $PYTHON_VERSION_NO_DOT = "${{ matrix.python_version }}".Replace('.', '')
          Write-Host "PYTHON_VERSION_NO_DOT: $PYTHON_VERSION_NO_DOT"
          $GENSIM_WHL = "gensim-4.3.3.1-cp${PYTHON_VERSION_NO_DOT}-cp${PYTHON_VERSION_NO_DOT}-win_amd64.whl"
          curl -o %GENSIM_WHL% https://github.com/mihashi0wang/gensim/releases/download/4.3.3.1/%GENSIM_WHL%
          pip install ${GENSIM_WHL}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: $POETRY_VERSION
      - name: Install dependencies
        run: poetry install
      - name: Run Unit Tests and Doctests Python ${{matrix.python_version}} ${{matrix.os}}
        run: poetry run poe tests
      - name: Run mypy type check Python ${{matrix.python_version}} ${{matrix.os}}
        run: poetry run poe type_check
      - name: Generate dependency tree
        run: |
          export DEPS='dependencies_${{matrix.python_version}}_${{matrix.os}}.txt'
          echo "${{matrix.python_version}} ${{matrix.os}}" > $DEPS
          poetry run pipdeptree >> $DEPS
        shell: bash
      - name: Archive dependency tree
        uses: actions/upload-artifact@v4
        with:
          name: dependencies-${{matrix.python_version}}-${{matrix.os}}
          path: |
            dependencies_${{matrix.python_version}}_${{matrix.os}}.txt
